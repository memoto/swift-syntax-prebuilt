name: Create release

on:
  workflow_dispatch:
    inputs: 
      swift-syntax-tag: 
        description: 'Tag related to swift-syntax version'
        required: true
        type: string
      release-tag:
        description: 'Tag related to release version, if not provided, swift-syntax-tag will be used'
        required: false
        type: string
      xcode-version:
        description: 'Xcode version'
        required: false
        default: '16.2'
        type: string
      products:
        description: 'Products to build'
        required: false
        default: 'SwiftCompilerPlugin SwiftDiagnostics SwiftParser SwiftParserDiagnostics SwiftRefactor SwiftSyntax SwiftBasicFormat SwiftSyntaxBuilder SwiftSyntaxMacros SwiftOperators SwiftCompilerPluginMessageHandling SwiftLibraryPluginProvider SwiftSyntaxMacrosGenericTestSupport SwiftSyntaxMacrosTestSupport SwiftSyntaxMacroExpansion SwiftLexicalLookup SwiftIfConfig SwiftIDEUtils'
        type: string

jobs:
  release:
    runs-on: macos-latest
    env:
      SWIFT_SYNTAX_TAG: ${{ inputs.swift-syntax-tag }}
      RELEASE_TAG: ${{ inputs.release-tag || inputs.swift-syntax-tag }}
      SWIFT_SYNTAX_REPO: https://github.com/swiftlang/swift-syntax.git
      XCODE_VERSION: ${{ inputs.xcode-version }}
      BUILD_PATH: .build/release
      ARTIFACT_REMOTE_PATH: ${{ github.server_url }}/${{ github.repository }}/releases/download/${{ inputs.release-tag }}
      PRODUCTS: ${{ inputs.products }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Select xcode version
        run: xcodes select $XCODE_VERSION
      
      - name: Clone original repo
        run: |
          git clone --branch $SWIFT_SYNTAX_TAG --depth 1 $SWIFT_SYNTAX_REPO swift-syntax
      - name: Install xcframeworks builder
        run: |
          brew install segment-integrations/formulae/swift-create-xcframework
      - name: Install stencil
        run: |
          brew install alephao/formulae/stencil
      - name: Calculate prodcuts checksum
        id: calc-products-checksum
        run: |
          set e
          echo "hash=$(echo $PRODUCTS | shasum -a 256 | awk '{print $1}')" >> $GITHUB_OUTPUT
      - name: Restore artifacts
        id: restore-artifacts
        uses: actions/cache/restore@v4
        with:
          key: ${{ runner.os }}-${{ inputs.xcode-version }}-${{ steps.calc-products-checksum.outputs.hash }}-${{ inputs.release-tag }}-${{ hashFiles('swift-syntax/Package.swift') }}
          path: ${{ env.BUILD_PATH }}
      - name: Create xcframeworks
        if: steps.restore-artifacts.outputs.cache-hit != 'true'
        run: |
          xcode-select -p
          xcrun swift --version
          mkdir -p $BUILD_PATH
          set -o pipefail && \
          swift create-xcframework $PRODUCTS --package-path swift-syntax \
          --platform ios --platform macos --no-debug-symbols \
          --xc-setting OTHER_LDFLAGS="-weak_framework XCTest" \
          --zip --output $BUILD_PATH | xcbeautify
          echo $BUILD_PATH
          ls -l $BUILD_PATH
      - name: Cache artifacts
        if: steps.restore-artifacts.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.restore-artifacts.outputs.cache-primary-key }}
          path: ${{ env.BUILD_PATH }}
      - name: Generate package
        run: |
          echo "🌍 Artifacts path: $ARTIFACT_REMOTE_PATH"
          mkdir -p $BUILD_PATH
          echo "artifacts:" > $BUILD_PATH/Uploads.yaml
          for file in $BUILD_PATH/*.sha256; do
              echo "  - name: $(basename $file .sha256)" >> $BUILD_PATH/Uploads.yaml
              echo "    checksum: $(cat $file)" >> $BUILD_PATH/Uploads.yaml
          done

          stencil render -t templates/Package.swift.stencil -d $BUILD_PATH/Uploads.yaml -o $BUILD_PATH/Package.swift.env
          envsubst < $BUILD_PATH/Package.swift.env > Package.swift
          cat Package.swift
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update for release ${{ env.RELEASE_TAG }}
          tagging_message: ${{ env.RELEASE_TAG }}
          file_pattern: "*.swift*"
          push_options: '--force'
          skip_fetch: true
      - name: Upload xcframeworks
        uses: softprops/action-gh-release@v2
        id: upload-artifacts
        with:
          draft: false
          name: ${{ env.RELEASE_TAG }}
          tag_name: ${{ env.RELEASE_TAG }}
          body: Release from swift-syntax ${{ env.SWIFT_SYNTAX_TAG }} tagged with ${{ env.RELEASE_TAG }}
          files: ${{ env.BUILD_PATH }}/*.zip
          fail_on_unmatched_files: true
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
